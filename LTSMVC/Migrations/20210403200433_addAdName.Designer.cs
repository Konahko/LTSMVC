// <auto-generated />
using System;
using LTSMVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LTSMVC.Migrations
{
    [DbContext(typeof(Lts2Context))]
    [Migration("20210403200433_addAdName")]
    partial class addAdName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("LTSMVC.Models.Account", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .UseCollation("utf32_bin")
                        .HasCharSet("utf32");

                    b.Property<string>("AddInfo")
                        .HasColumnType("varchar(30)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<DateTime?>("OutDate")
                        .HasColumnType("timestamp(6)");

                    b.Property<string>("Password")
                        .HasColumnType("varchar(16)")
                        .UseCollation("utf32_bin")
                        .HasCharSet("utf32");

                    b.Property<short>("StaffId")
                        .HasColumnType("smallint");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "Id_UNIQUE")
                        .IsUnique();

                    b.HasIndex(new[] { "StaffId" }, "fk_account_staff1_idx");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("LTSMVC.Models.AddressBook", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<int?>("IpNumber")
                        .HasColumnType("int");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<string>("Place")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("Post")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("Sld")
                        .IsRequired()
                        .HasColumnType("char(2)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<short?>("StaffId")
                        .IsRequired()
                        .HasColumnType("smallint");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "StaffId" }, "fk_Num_table_staff1_idx");

                    b.ToTable("AddressBooks");
                });

            modelBuilder.Entity("LTSMVC.Models.Expendable", b =>
                {
                    b.Property<ushort>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint unsigned");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("Expendables");
                });

            modelBuilder.Entity("LTSMVC.Models.ExpendablesItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ushort>("ExpendablesId")
                        .HasColumnType("smallint unsigned");

                    b.Property<short>("StaffId")
                        .HasColumnType("smallint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("varchar(35)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ExpendablesId" }, "fk_Expendables_items_Expendables1_idx");

                    b.HasIndex(new[] { "StaffId" }, "fk_Expendables_items_staff1_idx");

                    b.ToTable("ExpendablesItems");
                });

            modelBuilder.Entity("LTSMVC.Models.JournalExpendable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ExpendablesItemsId")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .HasColumnType("varchar(900)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("timestamp(6)");

                    b.Property<int?>("TriggerUser")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "ExpendablesItemsId" }, "fk_journal_Expendables_Expendables_items1_idx");

                    b.ToTable("JournalExpendables");
                });

            modelBuilder.Entity("LTSMVC.Models.JournalMachine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<short>("MachinesId")
                        .HasColumnType("smallint");

                    b.Property<string>("State")
                        .HasColumnType("varchar(2000)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("timestamp(6)");

                    b.Property<int?>("TriggerUser")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MachinesId" }, "fk_Journal_Machines_Machines1_idx");

                    b.ToTable("JournalMachines");
                });

            modelBuilder.Entity("LTSMVC.Models.License", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Lisence")
                        .IsRequired()
                        .HasColumnType("varchar(16)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<short>("MachinesId")
                        .HasColumnType("smallint");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("char(4)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<short>("StaffId")
                        .HasColumnType("smallint");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MachinesId" }, "fk_License_Machines1_idx");

                    b.HasIndex(new[] { "StaffId" }, "fk_License_staff1_idx");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("LTSMVC.Models.Machine", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<string>("AddInfo")
                        .HasColumnType("varchar(45)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("Character")
                        .HasColumnType("varchar(100)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("Expendables")
                        .HasColumnType("varchar(300)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("InvNumber")
                        .IsRequired()
                        .HasColumnType("char(13)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<short?>("LastUser")
                        .HasColumnType("smallint");

                    b.Property<string>("Mod")
                        .HasColumnType("varchar(50)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("Place")
                        .HasColumnType("varchar(30)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<short>("StaffId")
                        .HasColumnType("smallint");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(10)")
                        .HasDefaultValueSql("'Склад'")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("StaffId");

                    b.HasIndex(new[] { "Id" }, "fk_Machines_staff_index");

                    b.HasIndex(new[] { "Id" }, "id_Machines_UNIQUE")
                        .IsUnique();

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("LTSMVC.Models.MachinesConnect", b =>
                {
                    b.Property<short>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<sbyte?>("IsAdmin")
                        .HasColumnType("tinyint");

                    b.Property<string>("Login")
                        .HasColumnType("varchar(15)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<short>("MachinesId")
                        .HasColumnType("smallint");

                    b.Property<string>("Pass")
                        .HasColumnType("varchar(16)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.HasKey("id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MachinesId" }, "fk_Machines_connect_Machines1_idx");

                    b.ToTable("MachinesConnects");
                });

            modelBuilder.Entity("LTSMVC.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp(6)");

                    b.Property<short>("FromUser")
                        .HasColumnType("smallint");

                    b.Property<sbyte>("IsOnlyFile")
                        .HasColumnType("tinyint");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "TicketId" }, "fk_ticketid_ticket_idx");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("LTSMVC.Models.MessageFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("varchar(7)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(45)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MessageId" }, "fk_Message_File_Messages1_idx");

                    b.ToTable("MessageFiles");
                });

            modelBuilder.Entity("LTSMVC.Models.MessageText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("varchar(1000)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MessageId" }, "fk_Message_text_Messages1_idx");

                    b.ToTable("MessageTexts");
                });

            modelBuilder.Entity("LTSMVC.Models.NetworkAddress", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<string>("AddressType")
                        .HasColumnType("char(1)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<short?>("IpAddress")
                        .HasColumnType("smallint");

                    b.Property<string>("Mac")
                        .IsRequired()
                        .HasColumnType("varchar(17)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<short?>("MachinesId")
                        .HasColumnType("smallint");

                    b.Property<short>("Network")
                        .HasColumnType("smallint");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MachinesId" }, "fk_Network_address_Machines1_idx");

                    b.HasIndex(new[] { "Id" }, "id_NetworkAddress_UNIQUE")
                        .IsUnique();

                    b.ToTable("NetworkAdresses");
                });

            modelBuilder.Entity("LTSMVC.Models.RemoveControl", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<string>("AmmyAdmin")
                        .HasColumnType("varchar(10)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("AmmyAdminPassword")
                        .HasColumnType("varchar(20)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("AnyDesk")
                        .HasColumnType("varchar(10)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("AnyDeskPassword")
                        .HasColumnType("varchar(20)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<short>("MachinesId")
                        .HasColumnType("smallint");

                    b.Property<string>("Rdp")
                        .HasColumnType("varchar(45)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("TeamViewer")
                        .HasColumnType("varchar(10)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("TeamViewerPassword")
                        .HasColumnType("varchar(20)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "MachinesId" }, "fk_connected_machines_Machines1_idx");

                    b.ToTable("RemoveControls");
                });

            modelBuilder.Entity("LTSMVC.Models.Staff", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<string>("ADName")
                        .IsRequired()
                        .HasColumnType("varchar(55)")
                        .UseCollation("utf32_bin")
                        .HasCharSet("utf32");

                    b.Property<bool>("AdminU")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Place")
                        .HasColumnType("varchar(45)")
                        .UseCollation("utf32_bin")
                        .HasCharSet("utf32");

                    b.Property<string>("StaffName")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("StaffPoss")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<string>("StaffSub")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<int?>("TgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Id" }, "Staff_id_3")
                        .IsUnique();

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("LTSMVC.Models.StaffsTasks", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    b.Property<short>("StaffId")
                        .HasColumnType("smallint");

                    b.Property<short>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<int>("Task")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("StaffId");

                    b.HasIndex("Task");

                    b.ToTable("StaffsTasks");
                });

            modelBuilder.Entity("LTSMVC.Models.Tasks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateClose")
                        .HasColumnType("timestamp(6)");

                    b.Property<DateTime>("DateOpen")
                        .HasColumnType("timestamp(6)");

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("timestamp(6)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(45)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<short>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValue((short)0);

                    b.Property<string>("Task")
                        .HasColumnType("varchar(500)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Id" }, "Tasks_id_3")
                        .IsUnique();

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("LTSMVC.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateClose")
                        .HasColumnType("timestamp(6)");

                    b.Property<DateTime>("DateOpen")
                        .HasColumnType("timestamp(6)");

                    b.Property<short>("StaffId")
                        .HasColumnType("smallint");

                    b.Property<bool?>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("TicketProblem")
                        .HasColumnType("varchar(500)")
                        .UseCollation("utf8_general_ci")
                        .HasCharSet("utf8");

                    b.Property<short?>("WorkerId")
                        .HasColumnType("smallint");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "StaffId" }, "fk_chat_staff1_idx");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("LTSMVC.Models.Account", b =>
                {
                    b.HasOne("LTSMVC.Models.Staff", "Staff")
                        .WithMany("Accounts")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("fk_account_staff1")
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("LTSMVC.Models.AddressBook", b =>
                {
                    b.HasOne("LTSMVC.Models.Staff", "Staff")
                        .WithMany("AddressBooks")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("fk_Num_table_staff1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("LTSMVC.Models.ExpendablesItem", b =>
                {
                    b.HasOne("LTSMVC.Models.Expendable", "Expendables")
                        .WithMany("ExpendablesItems")
                        .HasForeignKey("ExpendablesId")
                        .HasConstraintName("fk_Expendables_items_Expendables1")
                        .IsRequired();

                    b.HasOne("LTSMVC.Models.Staff", "Staff")
                        .WithMany("ExpendablesItems")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("fk_Expendables_items_staff1")
                        .IsRequired();

                    b.Navigation("Expendables");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("LTSMVC.Models.JournalExpendable", b =>
                {
                    b.HasOne("LTSMVC.Models.ExpendablesItem", "ExpendablesItems")
                        .WithMany("JournalExpendables")
                        .HasForeignKey("ExpendablesItemsId")
                        .HasConstraintName("fk_journal_Expendables_Expendables_items1")
                        .IsRequired();

                    b.Navigation("ExpendablesItems");
                });

            modelBuilder.Entity("LTSMVC.Models.JournalMachine", b =>
                {
                    b.HasOne("LTSMVC.Models.Machine", "Machine")
                        .WithMany("JournalMachines")
                        .HasForeignKey("MachinesId")
                        .HasConstraintName("fk_Journal_Machines_Machines1")
                        .IsRequired();

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("LTSMVC.Models.License", b =>
                {
                    b.HasOne("LTSMVC.Models.Machine", "Machine")
                        .WithMany("Licenses")
                        .HasForeignKey("MachinesId")
                        .HasConstraintName("fk_License_Machines1")
                        .IsRequired();

                    b.HasOne("LTSMVC.Models.Staff", "Staff")
                        .WithMany("Licenses")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("fk_License_staff1")
                        .IsRequired();

                    b.Navigation("Machine");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("LTSMVC.Models.Machine", b =>
                {
                    b.HasOne("LTSMVC.Models.Staff", "Staff")
                        .WithMany("Machines")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("fk_Machines_staff")
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("LTSMVC.Models.MachinesConnect", b =>
                {
                    b.HasOne("LTSMVC.Models.Machine", "Machines")
                        .WithMany("MachinesConnects")
                        .HasForeignKey("MachinesId")
                        .HasConstraintName("fk_Machines_connect_Machines1")
                        .IsRequired();

                    b.Navigation("Machines");
                });

            modelBuilder.Entity("LTSMVC.Models.Message", b =>
                {
                    b.HasOne("LTSMVC.Models.Ticket", "Ticket")
                        .WithMany("Messages")
                        .HasForeignKey("TicketId")
                        .HasConstraintName("fk_ticketid_ticket")
                        .IsRequired();

                    b.Navigation("Ticket");
                });

            modelBuilder.Entity("LTSMVC.Models.MessageFile", b =>
                {
                    b.HasOne("LTSMVC.Models.Message", "Message")
                        .WithMany("MessageFiles")
                        .HasForeignKey("MessageId")
                        .HasConstraintName("fk_Message_File_Messages1")
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("LTSMVC.Models.MessageText", b =>
                {
                    b.HasOne("LTSMVC.Models.Message", "Message")
                        .WithMany("MessageText")
                        .HasForeignKey("MessageId")
                        .HasConstraintName("fk_Message_text_Messages1")
                        .IsRequired();

                    b.Navigation("Message");
                });

            modelBuilder.Entity("LTSMVC.Models.NetworkAddress", b =>
                {
                    b.HasOne("LTSMVC.Models.Machine", "Machine")
                        .WithMany()
                        .HasForeignKey("MachinesId")
                        .HasConstraintName("fk_Network_address_Machines1");

                    b.Navigation("Machine");
                });

            modelBuilder.Entity("LTSMVC.Models.RemoveControl", b =>
                {
                    b.HasOne("LTSMVC.Models.Machine", "Machines")
                        .WithMany("RemoveControls")
                        .HasForeignKey("MachinesId")
                        .HasConstraintName("fk_connected_machines_Machines1")
                        .IsRequired();

                    b.Navigation("Machines");
                });

            modelBuilder.Entity("LTSMVC.Models.StaffsTasks", b =>
                {
                    b.HasOne("LTSMVC.Models.Staff", "Staff")
                        .WithMany("StaffsTasks")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("fr_StaffsTasks_Staff1")
                        .IsRequired();

                    b.HasOne("LTSMVC.Models.Tasks", "Tasks")
                        .WithMany("StaffsTasks")
                        .HasForeignKey("Task")
                        .HasConstraintName("fr_StaffsTasks_Task1")
                        .IsRequired();

                    b.Navigation("Staff");

                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("LTSMVC.Models.Ticket", b =>
                {
                    b.HasOne("LTSMVC.Models.Staff", "Staff")
                        .WithMany("Tickets")
                        .HasForeignKey("StaffId")
                        .HasConstraintName("fk_chat_staff1")
                        .IsRequired();

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("LTSMVC.Models.Expendable", b =>
                {
                    b.Navigation("ExpendablesItems");
                });

            modelBuilder.Entity("LTSMVC.Models.ExpendablesItem", b =>
                {
                    b.Navigation("JournalExpendables");
                });

            modelBuilder.Entity("LTSMVC.Models.Machine", b =>
                {
                    b.Navigation("JournalMachines");

                    b.Navigation("Licenses");

                    b.Navigation("MachinesConnects");

                    b.Navigation("RemoveControls");
                });

            modelBuilder.Entity("LTSMVC.Models.Message", b =>
                {
                    b.Navigation("MessageFiles");

                    b.Navigation("MessageText");
                });

            modelBuilder.Entity("LTSMVC.Models.Staff", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("AddressBooks");

                    b.Navigation("ExpendablesItems");

                    b.Navigation("Licenses");

                    b.Navigation("Machines");

                    b.Navigation("StaffsTasks");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("LTSMVC.Models.Tasks", b =>
                {
                    b.Navigation("StaffsTasks");
                });

            modelBuilder.Entity("LTSMVC.Models.Ticket", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
